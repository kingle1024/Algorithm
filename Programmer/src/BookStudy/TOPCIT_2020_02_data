### 데이터 독립성
- 개념스키마의 핵심은 '통합'된 접근이 가능하게 외부스키마와 독립적으로 구성한다는 것을 기억하자.
- 개념 단계에서는 고객 데이터베이스 전체에 대한 논리적 구조를 정의하는 개념 스키마가 하나 존재한다.
- 개념 스키마는 고객 데이터베이스를 이용하는 모든 사용자에게 필요한 데이터를 종합하여 구성한다.
- 외부 스키마 
  - 주로 사용자는 응용 프로그래머
  - DML을 사용해서 데이터를 이용 
- 개념 스키마 
  - 주로 사용자는 DBA
  - DDL과 DCL을 사용해서 구조를 설계 
  - DDL -> CREATE, ALTER, DROP, TRUNCATE
  - DCL -> GRANT, REVOKE, COMMIT, ROLLBACK
- 내부 스키마 
  - 데이터의 필드의 이름이 무엇이고, 해당 필드는 몇 Byte인지, 인덱스 등을 정의 
  - 물리적 저장 장치의 입장으로 바라봄

### 인공지능 구현에 사용되는 기술
- 전문가 시스템(Expert System)
  - 방대한 지식 체계를 규칙으로 표현하여, 데이터를 입력하면 컴퓨터가 정해진 규칙에 따라 판단을 내리도록 한다.
  - IF-THEN-ELSE 형태로 구성되는 시스템으로 규칙의 종류가 "많을수록 정확도가 높아지게 된다"
- 인공 신경망(Artificial Neural Network)
  - 기계학습 분야에서 연구되고 있는 학습 알고리즘들 중 하나로 "인간의 뇌의 뉴런과 시냅스의 연결"을 프로그램으로 재현하는 것이다.
- 딥러닝(Deep Learning)
  - 입력과 출력 사이에 있는 인공 뉴런들을 여러 개 층층이 쌓고 연결한 인공신경망 기법을 주로 다루는 연구이다.
  - 즉, 단일층이 아닌 실제 뇌처럼 여러 계층으로 되어있다.
- 유전 알고리즘(Genetic Algorithm)
  - 자연의 진화 과정을 모방한 연구이다.
  - 즉, 어떤 세대를 구성하는 "개체군의 교배(CrossOver)와 돌연변이(Mutation)" 과정을 통해 세대를 반복시켜 특정한 문제의 적절한 답을 찾는 것이다.

### MapReduce, 맵리듀스
- (MapReduce)는 저렴한 머신을 이용하여 빅데이터를 병렬로 분산 처리하기 위한 프로그래밍 모델로서, A(A1,A2,A3,A4 등) 함수와 B(B1, B2 등) 함수로 구성된 프로그램을 이용하여 대량의 데이터를 병렬로 처리 가능한 모델이다.
- (MapReduce)의 여러 머신들에 분산 저장된 데이터를 가공하여 대규모 데이터에 대한 분석을 가능하게 한다. 
- 기본적으로 (MapReduce)는 배치 기반의 프로세싱을 수행하며, 대규모 데이터를 다루기 편리하다.
- 수행 결과는 물리적 장치의 고장을 고려해 데이터를 복제하고 분산하여 안전하게 저장한다. 

### 분산데이터베이스 
- 데이터베이스가 네트워크상에서 여러 컴퓨터에 물리적으로 분산되어 있지만, 사용자가 하나의 데이터베이스처럼 인식할 수 있도록 논리적으로 통합되어 공유되는 데이터베이스를 의미한다.
- 분산데이터베이스의 구조
  - 전역 스키마 : 통합된 스키마
  - 할당 스키마 : 분할된 전역 스키마를 지역으로 할당한 스키마
  - 지역 스키마 : 할당된 각 지역의 스키마
- 분산데이터의 분할 투명성은 사용자에게 전역 스키마가 어떻게 분할되었는지 알려주는 역할을 수행한다. 분할 투명성의 종류를 모두 설명하시오.
  - 여러 개의 데이터베이스를 논리적인 단일 데이터베이스로 인식하려면, 사용자들이 데이터가 물리적으로 어디에 배치되어 있고 어떻게 접근해야 하는지 알 필요가 없어야 한다. 이러한 특성을 데이터 투명성이라고 한다.
  - 분산데이터베이스 관리시스템은 부하, 위치, 중복, 장애, 병행 투명성을 제공한다.
  - 분할 투명성은 사용자에게 전역 스키마가 어떻게 분할되었는지 알려주는 역할을 한다.
  - 수직분할은 한 릴레이션을 속성들의 부분집합으로 이루어진 릴레이션들로 나누는 것이고, (컬럼을 기준으로 컬럼을 분리한다)
  - 수평분할은 한 릴레이션을 튜플들의 부분집합으로 이루어진 릴레이션들로 나누는 것이다. (각 지사별로 사용하는 row가 다를때 사용한다)
### 개체관계모형
  - CREATE TABLE 관리 (
      직원번호 CHAR(10),
      부서코드 CHAR(10),
      발령일자 DATE, 
      PRIMARY KEY(부서코드),
      FOREIGN KEY(직원번호) REFERENCES 직원,
      FOREIGN KEY(부서코드) REFERENCES 부서
  ) 

### 정규화 
- 정규화의 단점
  - 릴레이션의 분해로 인해 릴레이션 간의 JOIN연산이 많아진다.
  - 질의에 대한 응답 시간이 느려질 수도 있다. 
- 1NF
  - 각 컬럼이 하나의 속성만을 가져야한다.
- 2NF
  - 모든 컬럼이 "부분적 종속"이 없어야한다. 모든 칼럼이 완전 함수 종속을 만족해야한다.
  - 딱히 관계가 없는 데이터가 있으면 2개의 테이블로 나눈다. 
    - 학번 + 수강학기 + 과목명 + 제한인원이 있을 떄에 제한인원은 관계가 적으므로 나눈다.
- 3NF
  - 기본키를 제외한 속성들 간의 "이행 종속성"이 없어야 한다.
  - 같은 테이블 내 갑을 관계 제거
- BCNF
- https://mr-dan.tistory.com/10
- https://code-lab1.tistory.com/48
