item26. 로 타입은 사용하지 말라.

제네릭 클래스와 제네릭 인터페이스를 통틀어 제네릭 타입이라 한다.
제네릭 타입을 하나 정의하면 그에 딸린 로 타입(raw type)도 함께 정의된다.
예컨대 List<E>의 로 타입은 List다.

Collection stamps -> Collection<Stamp> stamps

로 타입을 절대로 쓰면 안된다.
로 타입을 쓰면 제네릭이 안겨주는 안전성과 표현력을 모두 잃게 된다.

그렇다면 절대 써서는 안 되는 로 타입을 애초에 왜 만들어 놓은 걸까? 바로 호환성 때문이다.
자바가 제네릭을 받아들이기까지 거의 10년이 걸린 탓에 제네릭 없이 짠 코드가 이미 세상을 뒤덮어 버렸다. 
그래서 기존 코드를 모두 수용하면서 제네릭을 사용하는 새로운 코드와도 맞물려 돌아가게 해야만 했다.
로 타입을 사용하는 메서드에 매개변수화 타입의 인스턴스를 넘겨도 (물론 그 반대도) 동작해야만 했던 것이다.
이 마이그레이션 호환성을 위해 로 타입을 지원하고 제네릭 구현에는 소거 방식을 사용하기로 했다.

Set<?>와 로 타입인 Set의 차이는 무엇일까?
특징을 간단히 말하자면 와일드카드 타입은 안전하고, 로 타입은 안전하지 않다.
로 타입 컬렉션에는 아무 원소나 넣을 수 있으니 타입 불변식을 훼손하기 쉽다.
